
coffeecup_heater.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001de  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000001de  00000252  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  00000252  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000264  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	15 c0       	rjmp	.+42     	; 0x2e <__bad_interrupt>
   4:	14 c0       	rjmp	.+40     	; 0x2e <__bad_interrupt>
   6:	13 c0       	rjmp	.+38     	; 0x2e <__bad_interrupt>
   8:	12 c0       	rjmp	.+36     	; 0x2e <__bad_interrupt>
   a:	11 c0       	rjmp	.+34     	; 0x2e <__bad_interrupt>
   c:	10 c0       	rjmp	.+32     	; 0x2e <__bad_interrupt>
   e:	0f c0       	rjmp	.+30     	; 0x2e <__bad_interrupt>
  10:	0e c0       	rjmp	.+28     	; 0x2e <__bad_interrupt>
  12:	0d c0       	rjmp	.+26     	; 0x2e <__bad_interrupt>
  14:	0c c0       	rjmp	.+24     	; 0x2e <__bad_interrupt>
  16:	0b c0       	rjmp	.+22     	; 0x2e <__bad_interrupt>
  18:	0a c0       	rjmp	.+20     	; 0x2e <__bad_interrupt>
  1a:	09 c0       	rjmp	.+18     	; 0x2e <__bad_interrupt>
  1c:	08 c0       	rjmp	.+16     	; 0x2e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d1 e0       	ldi	r29, 0x01	; 1
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	c4 d0       	rcall	.+392    	; 0x1b4 <main>
  2c:	d6 c0       	rjmp	.+428    	; 0x1da <_exit>

0000002e <__bad_interrupt>:
  2e:	e8 cf       	rjmp	.-48     	; 0x0 <__vectors>

00000030 <checkPresence>:
  30:	c3 98       	cbi	0x18, 3	; 24
  32:	bb 9a       	sbi	0x17, 3	; 23
  34:	8f eb       	ldi	r24, 0xBF	; 191
  36:	93 e0       	ldi	r25, 0x03	; 3
  38:	01 97       	sbiw	r24, 0x01	; 1
  3a:	f1 f7       	brne	.-4      	; 0x38 <checkPresence+0x8>
  3c:	00 c0       	rjmp	.+0      	; 0x3e <__SP_H__>
  3e:	00 00       	nop
  40:	9f b7       	in	r25, 0x3f	; 63
  42:	f8 94       	cli
  44:	bb 98       	cbi	0x17, 3	; 23
  46:	ea ea       	ldi	r30, 0xAA	; 170
  48:	ea 95       	dec	r30
  4a:	f1 f7       	brne	.-4      	; 0x48 <__SREG__+0x9>
  4c:	00 c0       	rjmp	.+0      	; 0x4e <__SREG__+0xf>
  4e:	86 b3       	in	r24, 0x16	; 22
  50:	9f bf       	out	0x3f, r25	; 63
  52:	ef eb       	ldi	r30, 0xBF	; 191
  54:	f3 e0       	ldi	r31, 0x03	; 3
  56:	31 97       	sbiw	r30, 0x01	; 1
  58:	f1 f7       	brne	.-4      	; 0x56 <__SREG__+0x17>
  5a:	00 c0       	rjmp	.+0      	; 0x5c <__SREG__+0x1d>
  5c:	00 00       	nop
  5e:	83 fb       	bst	r24, 3
  60:	88 27       	eor	r24, r24
  62:	80 f9       	bld	r24, 0
  64:	91 e0       	ldi	r25, 0x01	; 1
  66:	89 27       	eor	r24, r25
  68:	08 95       	ret

0000006a <writeBit>:
  6a:	9f b7       	in	r25, 0x3f	; 63
  6c:	f8 94       	cli
  6e:	c3 98       	cbi	0x18, 3	; 24
  70:	bb 9a       	sbi	0x17, 3	; 23
  72:	25 e0       	ldi	r18, 0x05	; 5
  74:	2a 95       	dec	r18
  76:	f1 f7       	brne	.-4      	; 0x74 <writeBit+0xa>
  78:	00 00       	nop
  7a:	88 23       	and	r24, r24
  7c:	29 f0       	breq	.+10     	; 0x88 <writeBit+0x1e>
  7e:	bb 98       	cbi	0x17, 3	; 23
  80:	80 ea       	ldi	r24, 0xA0	; 160
  82:	8a 95       	dec	r24
  84:	f1 f7       	brne	.-4      	; 0x82 <writeBit+0x18>
  86:	04 c0       	rjmp	.+8      	; 0x90 <writeBit+0x26>
  88:	20 ea       	ldi	r18, 0xA0	; 160
  8a:	2a 95       	dec	r18
  8c:	f1 f7       	brne	.-4      	; 0x8a <writeBit+0x20>
  8e:	bb 98       	cbi	0x17, 3	; 23
  90:	9f bf       	out	0x3f, r25	; 63
  92:	08 95       	ret

00000094 <sendByte>:
  94:	0f 93       	push	r16
  96:	1f 93       	push	r17
  98:	cf 93       	push	r28
  9a:	df 93       	push	r29
  9c:	c0 e0       	ldi	r28, 0x00	; 0
  9e:	d0 e0       	ldi	r29, 0x00	; 0
  a0:	08 2f       	mov	r16, r24
  a2:	10 e0       	ldi	r17, 0x00	; 0
  a4:	c8 01       	movw	r24, r16
  a6:	0c 2e       	mov	r0, r28
  a8:	02 c0       	rjmp	.+4      	; 0xae <sendByte+0x1a>
  aa:	95 95       	asr	r25
  ac:	87 95       	ror	r24
  ae:	0a 94       	dec	r0
  b0:	e2 f7       	brpl	.-8      	; 0xaa <sendByte+0x16>
  b2:	81 70       	andi	r24, 0x01	; 1
  b4:	da df       	rcall	.-76     	; 0x6a <writeBit>
  b6:	21 96       	adiw	r28, 0x01	; 1
  b8:	c8 30       	cpi	r28, 0x08	; 8
  ba:	d1 05       	cpc	r29, r1
  bc:	99 f7       	brne	.-26     	; 0xa4 <sendByte+0x10>
  be:	df 91       	pop	r29
  c0:	cf 91       	pop	r28
  c2:	1f 91       	pop	r17
  c4:	0f 91       	pop	r16
  c6:	08 95       	ret

000000c8 <readBit>:
  c8:	9f b7       	in	r25, 0x3f	; 63
  ca:	f8 94       	cli
  cc:	c3 98       	cbi	0x18, 3	; 24
  ce:	bb 9a       	sbi	0x17, 3	; 23
  d0:	85 e0       	ldi	r24, 0x05	; 5
  d2:	8a 95       	dec	r24
  d4:	f1 f7       	brne	.-4      	; 0xd2 <readBit+0xa>
  d6:	00 00       	nop
  d8:	bb 98       	cbi	0x17, 3	; 23
  da:	8a e1       	ldi	r24, 0x1A	; 26
  dc:	8a 95       	dec	r24
  de:	f1 f7       	brne	.-4      	; 0xdc <readBit+0x14>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <readBit+0x1a>
  e2:	86 b3       	in	r24, 0x16	; 22
  e4:	9f bf       	out	0x3f, r25	; 63
  e6:	95 e8       	ldi	r25, 0x85	; 133
  e8:	9a 95       	dec	r25
  ea:	f1 f7       	brne	.-4      	; 0xe8 <readBit+0x20>
  ec:	00 00       	nop
  ee:	83 fb       	bst	r24, 3
  f0:	88 27       	eor	r24, r24
  f2:	80 f9       	bld	r24, 0
  f4:	08 95       	ret

000000f6 <readByte>:
  f6:	ef 92       	push	r14
  f8:	ff 92       	push	r15
  fa:	1f 93       	push	r17
  fc:	cf 93       	push	r28
  fe:	df 93       	push	r29
 100:	c0 e0       	ldi	r28, 0x00	; 0
 102:	d0 e0       	ldi	r29, 0x00	; 0
 104:	10 e0       	ldi	r17, 0x00	; 0
 106:	ee 24       	eor	r14, r14
 108:	e3 94       	inc	r14
 10a:	f1 2c       	mov	r15, r1
 10c:	dd df       	rcall	.-70     	; 0xc8 <readBit>
 10e:	88 23       	and	r24, r24
 110:	39 f0       	breq	.+14     	; 0x120 <readByte+0x2a>
 112:	c7 01       	movw	r24, r14
 114:	0c 2e       	mov	r0, r28
 116:	01 c0       	rjmp	.+2      	; 0x11a <readByte+0x24>
 118:	88 0f       	add	r24, r24
 11a:	0a 94       	dec	r0
 11c:	ea f7       	brpl	.-6      	; 0x118 <readByte+0x22>
 11e:	18 2b       	or	r17, r24
 120:	21 96       	adiw	r28, 0x01	; 1
 122:	c8 30       	cpi	r28, 0x08	; 8
 124:	d1 05       	cpc	r29, r1
 126:	91 f7       	brne	.-28     	; 0x10c <readByte+0x16>
 128:	81 2f       	mov	r24, r17
 12a:	df 91       	pop	r29
 12c:	cf 91       	pop	r28
 12e:	1f 91       	pop	r17
 130:	ff 90       	pop	r15
 132:	ef 90       	pop	r14
 134:	08 95       	ret

00000136 <DS_readTemp>:
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	2f ef       	ldi	r18, 0xFF	; 255
 13c:	30 e7       	ldi	r19, 0x70	; 112
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	21 50       	subi	r18, 0x01	; 1
 142:	30 40       	sbci	r19, 0x00	; 0
 144:	80 40       	sbci	r24, 0x00	; 0
 146:	e1 f7       	brne	.-8      	; 0x140 <DS_readTemp+0xa>
 148:	00 c0       	rjmp	.+0      	; 0x14a <DS_readTemp+0x14>
 14a:	00 00       	nop
 14c:	71 df       	rcall	.-286    	; 0x30 <checkPresence>
 14e:	81 11       	cpse	r24, r1
 150:	02 c0       	rjmp	.+4      	; 0x156 <DS_readTemp+0x20>
 152:	8f ef       	ldi	r24, 0xFF	; 255
 154:	27 c0       	rjmp	.+78     	; 0x1a4 <__stack+0x45>
 156:	8c ec       	ldi	r24, 0xCC	; 204
 158:	9d df       	rcall	.-198    	; 0x94 <sendByte>
 15a:	84 e4       	ldi	r24, 0x44	; 68
 15c:	9b df       	rcall	.-202    	; 0x94 <sendByte>
 15e:	c3 9a       	sbi	0x18, 3	; 24
 160:	bb 9a       	sbi	0x17, 3	; 23
 162:	9f ef       	ldi	r25, 0xFF	; 255
 164:	2e e9       	ldi	r18, 0x9E	; 158
 166:	34 e2       	ldi	r19, 0x24	; 36
 168:	91 50       	subi	r25, 0x01	; 1
 16a:	20 40       	sbci	r18, 0x00	; 0
 16c:	30 40       	sbci	r19, 0x00	; 0
 16e:	e1 f7       	brne	.-8      	; 0x168 <__stack+0x9>
 170:	00 c0       	rjmp	.+0      	; 0x172 <__stack+0x13>
 172:	00 00       	nop
 174:	bb 98       	cbi	0x17, 3	; 23
 176:	5c df       	rcall	.-328    	; 0x30 <checkPresence>
 178:	88 23       	and	r24, r24
 17a:	59 f3       	breq	.-42     	; 0x152 <DS_readTemp+0x1c>
 17c:	8c ec       	ldi	r24, 0xCC	; 204
 17e:	8a df       	rcall	.-236    	; 0x94 <sendByte>
 180:	8e eb       	ldi	r24, 0xBE	; 190
 182:	88 df       	rcall	.-240    	; 0x94 <sendByte>
 184:	b8 df       	rcall	.-144    	; 0xf6 <readByte>
 186:	c8 2f       	mov	r28, r24
 188:	d0 e0       	ldi	r29, 0x00	; 0
 18a:	b5 df       	rcall	.-150    	; 0xf6 <readByte>
 18c:	9e 01       	movw	r18, r28
 18e:	38 2b       	or	r19, r24
 190:	c9 01       	movw	r24, r18
 192:	97 70       	andi	r25, 0x07	; 7
 194:	24 e0       	ldi	r18, 0x04	; 4
 196:	96 95       	lsr	r25
 198:	87 95       	ror	r24
 19a:	2a 95       	dec	r18
 19c:	e1 f7       	brne	.-8      	; 0x196 <__stack+0x37>
 19e:	8f 34       	cpi	r24, 0x4F	; 79
 1a0:	91 05       	cpc	r25, r1
 1a2:	b8 f6       	brcc	.-82     	; 0x152 <DS_readTemp+0x1c>
 1a4:	df 91       	pop	r29
 1a6:	cf 91       	pop	r28
 1a8:	08 95       	ret

000001aa <HwInit>:
 1aa:	88 e1       	ldi	r24, 0x18	; 24
 1ac:	87 bb       	out	0x17, r24	; 23
 1ae:	c3 98       	cbi	0x18, 3	; 24
 1b0:	c4 98       	cbi	0x18, 4	; 24
 1b2:	08 95       	ret

000001b4 <main>:
 1b4:	fa df       	rcall	.-12     	; 0x1aa <HwInit>
 1b6:	bf df       	rcall	.-130    	; 0x136 <DS_readTemp>
 1b8:	86 34       	cpi	r24, 0x46	; 70
 1ba:	18 f4       	brcc	.+6      	; 0x1c2 <main+0xe>
 1bc:	c3 9a       	sbi	0x18, 3	; 24
 1be:	c4 9a       	sbi	0x18, 4	; 24
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <main+0x12>
 1c2:	c3 98       	cbi	0x18, 3	; 24
 1c4:	c4 98       	cbi	0x18, 4	; 24
 1c6:	2f ef       	ldi	r18, 0xFF	; 255
 1c8:	89 e6       	ldi	r24, 0x69	; 105
 1ca:	98 e1       	ldi	r25, 0x18	; 24
 1cc:	21 50       	subi	r18, 0x01	; 1
 1ce:	80 40       	sbci	r24, 0x00	; 0
 1d0:	90 40       	sbci	r25, 0x00	; 0
 1d2:	e1 f7       	brne	.-8      	; 0x1cc <main+0x18>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <main+0x22>
 1d6:	00 00       	nop
 1d8:	ee cf       	rjmp	.-36     	; 0x1b6 <main+0x2>

000001da <_exit>:
 1da:	f8 94       	cli

000001dc <__stop_program>:
 1dc:	ff cf       	rjmp	.-2      	; 0x1dc <__stop_program>
