Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny45.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny45.o
LOAD ./DS18B20.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/libattiny45.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x1a8
 *(.vectors)
 .vectors       0x0000000000000000       0x1e /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny45.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000001e                . = ALIGN (0x2)
                0x000000000000001e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000001e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000001e                __trampolines_end = .
 *(.progmem*)
                0x000000000000001e                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000001e                __ctors_start = .
 *(.ctors)
                0x000000000000001e                __ctors_end = .
                0x000000000000001e                __dtors_start = .
 *(.dtors)
                0x000000000000001e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000001e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny45.o
                0x000000000000001e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000001e        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny45.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000002a        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny45.o
 *(.init9)
 *(.text)
 .text          0x000000000000002e        0x2 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny45.o
                0x000000000000002e                __vector_1
                0x000000000000002e                __vector_12
                0x000000000000002e                __bad_interrupt
                0x000000000000002e                __vector_6
                0x000000000000002e                __vector_3
                0x000000000000002e                __vector_11
                0x000000000000002e                __vector_13
                0x000000000000002e                __vector_7
                0x000000000000002e                __vector_5
                0x000000000000002e                __vector_4
                0x000000000000002e                __vector_9
                0x000000000000002e                __vector_2
                0x000000000000002e                __vector_8
                0x000000000000002e                __vector_14
                0x000000000000002e                __vector_10
 .text          0x0000000000000030        0x0 ./DS18B20.o
 .text          0x0000000000000030        0x0 ./main.o
 .text          0x0000000000000030        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
                0x0000000000000030                . = ALIGN (0x2)
 *(.text.*)
 .text.checkPresence
                0x0000000000000030       0x2e ./DS18B20.o
                0x0000000000000030                checkPresence
 .text.writeBit
                0x000000000000005e       0x24 ./DS18B20.o
                0x000000000000005e                writeBit
 .text.sendByte
                0x0000000000000082       0x34 ./DS18B20.o
                0x0000000000000082                sendByte
 .text.readBit  0x00000000000000b6       0x26 ./DS18B20.o
                0x00000000000000b6                readBit
 .text.readByte
                0x00000000000000dc       0x40 ./DS18B20.o
                0x00000000000000dc                readByte
 .text.DS_readTemp
                0x000000000000011c       0x66 ./DS18B20.o
                0x000000000000011c                DS_readTemp
 .text.HwInit   0x0000000000000182        0xc ./main.o
                0x0000000000000182                HwInit
 .text.startup.main
                0x000000000000018e       0x16 ./main.o
                0x000000000000018e                main
 .text.libgcc.mul
                0x00000000000001a4        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000001a4        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000001a4        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000001a4        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000001a4        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000001a4        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000001a4        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
                0x00000000000001a4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000001a4        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
                0x00000000000001a4                exit
                0x00000000000001a4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000001a4        0x4 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000001a8                _etext = .

.data           0x0000000000800060        0x0 load address 0x00000000000001a8
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny45.o
 .data          0x0000000000800060        0x0 ./DS18B20.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060        0x0
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny45.o
 .bss           0x0000000000800060        0x0 ./DS18B20.o
 .bss           0x0000000000800060        0x0 ./main.o
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800060                PROVIDE (__bss_end, .)
                0x00000000000001a8                __data_load_start = LOADADDR (.data)
                0x00000000000001a8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800060        0x0
                0x0000000000800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800060                PROVIDE (__noinit_end, .)
                0x0000000000800060                _end = .
                0x0000000000800060                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./DS18B20.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny45.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(coffeecup_heater.elf elf32-avr)
LOAD linker stubs
